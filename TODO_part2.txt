Tips
----
¤ Lec notes 4 har bra tips och kodexempel
¤ Se lec notes 4 för att se hur man anropar printString. Om man anropar den
  flera gånger med samma argument är det enklast att skapa en global
  variabel för varje anrop.

Kom ihåg
--------
¤ Lazy && and ||

TODO
----
¤ ENot kan modelleras genom att returnera e == false (med icmp). Gör en ny 
  instruction (BCmp) så slipper vi mod:a hårdkodandet i ICmp.
¤ Implementera resten av casen i Stm och Exp
¤ Ha med runtime.bc (obs: den kompillerade filen) i tar-bollen
¤ Prova att köra testfiler i en annan mapp än dir och se om Main lägger .ll-filen
  och jlc lägger main.o m.fl. i samma mapp som .jl-filen. Main verkar göra det
  då den lägger test.ll i dir och inte i src där den själv är.
¤ Provkör alla test i testsuiten

Frågor
------
¤ Behöver vi ha med \0A i de globala strängarna? Vad är den till för?

¤ Hur sparar vi namnet på testfilen i jlc? Vi behöver det sedan för att 
  kompillera llvm-filen, länka dem osv.
  
¤ Är det ok att använda LLVMs funktioner and, or och xor (är de lazy?)
  eller får vi bara använda de funktioner som finns på listan från lec3?
        Basic JavaLette will only need the following instructions:
            • Terminator instructions: ret and br
            • Arithmetic operations:
                • For integers add, sub, mul, sdiv and srem
                • For doubles fadd, fsub, fmul and fdiv
            • Memory access: alloca, load, getelementptr and store
            • Other: icmp, fcmp and call
        Some of the extensions will need more instructions.
  